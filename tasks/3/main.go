package main

import "fmt"

/*
	Программа находит сумму квадратов чисел в последовательности: 2, 4, 6, 8, 10
	с использованием конкурентных вычислений.
*/

func main() {
	// Задаем последовательность чисел
	arr := []int{2, 4, 6, 8, 10}

	// Вызываем функцию sqrtIn для вычисления квадратов чисел в последовательности параллельно
	out := sqrtIn(arr)

	var res int
	// Получаем данные из канала пока канал не закрыт
	for val := range out {
		// Суммируем квадраты чисел из канала
		res += val
	}

	// Выводим результат
	fmt.Println(res)
}

// sqrtIn принимает последовательность чисел и возвращает канал,
// в который параллельно записываются квадраты этих чисел.
func sqrtIn(inArr []int) <-chan int {
	// Инициализируем небуферизированный канал, принимающий int
	out := make(chan int)
	// Вызываем анонимную функцию в отдельной горутине
	// и передаем аргумент в параметр функции
	go func() {
		//Проходимcя циклом по массиву
		for _, num := range inArr {
			// Вычисление квадрата числа и запись в канал out
			out <- num * num
		}
		// Закрытие канала после записи всех значений
		close(out)
	}()
	return out
}
