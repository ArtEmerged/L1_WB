package main

import "fmt"

/*
	Реализация бинарного поиска с использованием встроенных методов языка.
	Важно: выполняется поиск только в отсортированном массиве.
*/

func main() {
	//Инициализируем отсортированный массив
	slice := []int{1, 2, 3, 7, 10, 90, 99, 100}

	// Вызов функции бинарного поиска
	ind := binarySearch(slice, 8)

	fmt.Println(ind)
}

// Функция для запуска рекурсивного поиска
func binarySearch(s []int, find int) int {
	// Вызов функции рекурсивного поиска с начальными параметрами
	// Передаем срез, искомый элемент, первый и последний индекс 
	return search(s, find, 0, len(s)-1)
}

// Функция рекурсивного поиска
func search(s []int, find, low, high int) int {
	// Проверяем случай: если нижний индекс превышает верхний, элемент не найден
	if low <= high {

		// Вычисляем индекс середины среза
		mid := (low + high) / 2

		// Если мы нашли искомый элемет, то возвращаем его
		if s[mid] == find {
			return mid
		}

		// Если искомый элемент больше середины, продолжаем поиск с правой половины среза
		if find > s[mid] {
			return search(s, find, mid+1, high)
		}

		// Если искомый элемент меньше середины, продолжаем поиск с левой половины среза
		return search(s, find, low, mid-1)
	}

	// Если нижний индекс превышает верхний, элемент не найден
	return -1
}
